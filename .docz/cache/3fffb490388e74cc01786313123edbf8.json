{"remainingRequest":"/Users/Ashkan/Desktop/LogiPro/LogiDash/logi-data-table/node_modules/docz-core/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"/Users/Ashkan/Desktop/LogiPro/LogiDash/logi-data-table/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[[\"/Users/Ashkan/Desktop/LogiPro/LogiDash/logi-data-table/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/Ashkan/Desktop/LogiPro/LogiDash/logi-data-table/node_modules/react-hot-loader/babel.js\"],\"cacheDirectory\":true,\"babelrc\":false}!/Users/Ashkan/Desktop/LogiPro/LogiDash/logi-data-table/src/LogiDataRow.js","dependencies":[{"path":"/Users/Ashkan/Desktop/LogiPro/LogiDash/logi-data-table/src/LogiDataRow.js","mtime":1542119721390},{"path":"/Users/Ashkan/Desktop/LogiPro/LogiDash/logi-data-table/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Ashkan/Desktop/LogiPro/LogiDash/logi-data-table/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var _jsxFileName = \"/Users/Ashkan/Desktop/LogiPro/LogiDash/logi-data-table/src/LogiDataRow.js\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport EditableTableCell from \"./EditableTableCell\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Button from \"@material-ui/core/Button\";\nimport { Value2SQLValue } from \"./Value2SQLValue\";\n\nvar style = function style(theme) {\n  return {\n    rowStyle: {\n      \"&:nth-of-type(odd)\": {\n        backgroundColor: theme.palette.background.default\n      }\n    },\n    progress: {\n      marginLeft: theme.spacing.unit * 2,\n      marginRight: theme.spacing.unit * 2\n    }\n  };\n};\n\nvar LogiDataRow =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LogiDataRow, _Component);\n\n  function LogiDataRow(props) {\n    var _this;\n\n    _classCallCheck(this, LogiDataRow);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LogiDataRow).call(this, props)); //keep the original row for user cancels edits\n\n    _this.originalRow = Object.assign({}, props.row);\n    _this.state = {\n      row: props.row\n    };\n    return _this;\n  }\n\n  _createClass(LogiDataRow, [{\n    key: \"updateRecord\",\n    value: function updateRecord() {\n      var _this2 = this;\n\n      this.setState({\n        actionInProgress: true\n      }); //create array of changed Items\n\n      var changedCols = [];\n\n      var _loop = function _loop(prop) {\n        if (prop.startsWith(\"$E-\")) {\n          //check if value is modified\n          if (_this2.state.row[prop] !== _this2.state.row[prop.slice(3)]) {\n            changedCols.push({\n              column: prop.slice(3),\n              value: _this2.state.row[prop],\n              sqlValue: Value2SQLValue.get(_this2.props.columns.find(function (c) {\n                return c.accessor === prop.slice(3);\n              }).dataType)(_this2.state.row[prop])\n            });\n          }\n        }\n      };\n\n      for (var prop in this.state.row) {\n        _loop(prop);\n      }\n\n      if (changedCols.length > 0) {\n        this.props.saveChanges(changedCols).then(function (response) {\n          if (response.success) {\n            if (response.record) {\n              //the promise can return the updated record\n              _this2.originalRow = response.record;\n            } else {\n              //if the promise doesn't return the record but\n              // the action has been successful update edited values locally\n              changedCols.forEach(function (cc) {\n                return _this2.originalRow[cc.column] = cc.value;\n              });\n            }\n          }\n\n          _this2.setState({\n            success: response.success ? response.success : false,\n            actionInProgress: false,\n            editMode: false,\n            row: _this2.originalRow\n          });\n        }).catch(function (e) {\n          _this2.setState({\n            success: false,\n            actionInProgress: false,\n            editMode: false,\n            row: _this2.originalRow\n          });\n        });\n      } //no column has changed\n      else {\n          this.setState({\n            success: true,\n            actionInProgress: false,\n            editMode: false\n          });\n        }\n    }\n  }, {\n    key: \"deleteRecord\",\n    value: function deleteRecord() {\n      var _this3 = this;\n\n      this.setState({\n        actionInProgress: true\n      });\n      this.props.deleteRecord().then(function (response) {\n        //if record successfully deleted we show Delete in action\n        //and user can't do anything with that record. Parent app can decide to refresh/re-fetch data\n        _this3.setState({\n          success: response.success ? response.success : false,\n          actionInProgress: false,\n          deleted: response.success\n        });\n      }).catch(function (e) {\n        _this3.setState({\n          success: false,\n          actionInProgress: false,\n          deleted: false\n        });\n      });\n    }\n  }, {\n    key: \"changeValue\",\n    value: function changeValue(value, columnName) {\n      var editedRow = this.state.row;\n      editedRow[\"$E-\" + columnName] = value;\n      this.setState({\n        row: editedRow\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          columns = _this$props.columns,\n          index = _this$props.index;\n      return React.createElement(TableRow, {\n        className: classes.rowStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, this.props.newlyAdded ? React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"New\") : this.state.deleted ? React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"DELETED\") : this.state.actionInProgress ? React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(CircularProgress, {\n        size: 30,\n        className: classes.progress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      })) : this.state.success !== undefined && !this.state.success ? React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(FailedButton, {\n        onExecute: function onExecute() {\n          //reset the row to original row\n          _this4.setState({\n            editMode: false,\n            success: undefined,\n            deleted: false,\n            row: _this4.originalRow\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      })) : this.state.editMode || this.props.newRow ? React.createElement(TableCell, {\n        padding: \"checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(CommitButton, {\n        onExecute: function onExecute() {\n          return _this4.updateRecord();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }), React.createElement(CancelButton, {\n        onExecute: function onExecute() {\n          if (_this4.props.newRow) {\n            _this4.props.newRowCanceled();\n          } else {\n            //reset the row to original row\n            _this4.setState({\n              editMode: false,\n              row: _this4.originalRow\n            });\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      })) : this.props.allowEdit || this.props.allowDelete || this.props.allowAddNew ? React.createElement(TableCell, {\n        padding: \"checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, this.props.allowEdit ? React.createElement(EditButton, {\n        onExecute: function onExecute() {\n          _this4.setState({\n            editMode: true\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }) : null, this.props.allowDelete ? React.createElement(DeleteButton, {\n        onExecute: function onExecute() {\n          return _this4.deleteRecord();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }) : null) : null, columns.filter(function (c) {\n        return !c.isHidden;\n      }).map(function (c) {\n        return React.createElement(TableCell, {\n          key: \"\".concat(c.accessor).concat(index),\n          component: index === 0 ? \"th\" : null,\n          scope: index === 0 ? \"row\" : null,\n          padding: \"checkbox\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186\n          },\n          __self: this\n        }, React.createElement(EditableTableCell, {\n          keyAccessor: _this4.props.keyAccessor,\n          dataRow: _this4.state.row,\n          columnName: c.accessor,\n          changeValue: function changeValue(value) {\n            return _this4.changeValue(value, c.accessor);\n          },\n          dataType: c.dataType,\n          readOnly: c.readOnly,\n          editMode: _this4.state.editMode || _this4.props.newRow,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192\n          },\n          __self: this\n        }));\n      }));\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return LogiDataRow;\n}(Component);\n\nLogiDataRow.propTypes = {\n  row: PropTypes.object,\n  columns: PropTypes.array,\n  index: PropTypes.number,\n  allowEdit: PropTypes.bool,\n  allowDelete: PropTypes.bool,\n  saveChanges: PropTypes.func,\n  deleteRecord: PropTypes.func\n};\n\nvar _default = withStyles(style)(LogiDataRow);\n\nexport default _default;\n\nvar EditButton = function EditButton(_ref) {\n  var onExecute = _ref.onExecute;\n  return React.createElement(IconButton, {\n    onClick: onExecute,\n    title: \"Edit row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }, React.createElement(EditIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }));\n};\n\nvar DeleteButton = function DeleteButton(_ref2) {\n  var onExecute = _ref2.onExecute;\n  return React.createElement(IconButton, {\n    onClick: onExecute,\n    title: \"Delete row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }, React.createElement(DeleteIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  }));\n};\n\nvar CommitButton = function CommitButton(_ref3) {\n  var onExecute = _ref3.onExecute;\n  return React.createElement(IconButton, {\n    onClick: onExecute,\n    title: \"Save changes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233\n    },\n    __self: this\n  }, React.createElement(SaveIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  }));\n};\n\nvar CancelButton = function CancelButton(_ref4) {\n  var onExecute = _ref4.onExecute;\n  return React.createElement(IconButton, {\n    color: \"secondary\",\n    onClick: onExecute,\n    title: \"Cancel changes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239\n    },\n    __self: this\n  }, React.createElement(CancelIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240\n    },\n    __self: this\n  }));\n};\n\nvar FailedButton = function FailedButton(_ref5) {\n  var onExecute = _ref5.onExecute;\n  return React.createElement(Button, {\n    color: \"primary\",\n    onClick: onExecute,\n    title: \"Action Failed\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245\n    },\n    __self: this\n  }, \"Failed!\");\n};\n\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(style, \"style\", \"/Users/Ashkan/Desktop/LogiPro/LogiDash/logi-data-table/src/LogiDataRow.js\");\n  reactHotLoader.register(LogiDataRow, \"LogiDataRow\", \"/Users/Ashkan/Desktop/LogiPro/LogiDash/logi-data-table/src/LogiDataRow.js\");\n  reactHotLoader.register(EditButton, \"EditButton\", \"/Users/Ashkan/Desktop/LogiPro/LogiDash/logi-data-table/src/LogiDataRow.js\");\n  reactHotLoader.register(DeleteButton, \"DeleteButton\", \"/Users/Ashkan/Desktop/LogiPro/LogiDash/logi-data-table/src/LogiDataRow.js\");\n  reactHotLoader.register(CommitButton, \"CommitButton\", \"/Users/Ashkan/Desktop/LogiPro/LogiDash/logi-data-table/src/LogiDataRow.js\");\n  reactHotLoader.register(CancelButton, \"CancelButton\", \"/Users/Ashkan/Desktop/LogiPro/LogiDash/logi-data-table/src/LogiDataRow.js\");\n  reactHotLoader.register(FailedButton, \"FailedButton\", \"/Users/Ashkan/Desktop/LogiPro/LogiDash/logi-data-table/src/LogiDataRow.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/Ashkan/Desktop/LogiPro/LogiDash/logi-data-table/src/LogiDataRow.js\");\n  leaveModule(module);\n})();\n\n;\nLogiDataRow.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [{\n    \"name\": \"updateRecord\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"deleteRecord\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"changeValue\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"value\",\n      \"type\": null\n    }, {\n      \"name\": \"columnName\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }],\n  \"displayName\": \"LogiDataRow\",\n  \"props\": {\n    \"row\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"columns\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"index\": {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"allowEdit\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"allowDelete\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"saveChanges\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"deleteRecord\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};",{"version":3,"sources":["/Users/Ashkan/Desktop/LogiPro/LogiDash/logi-data-table/src/LogiDataRow.js"],"names":["React","Component","PropTypes","TableRow","EditableTableCell","withStyles","DeleteIcon","EditIcon","SaveIcon","CancelIcon","IconButton","TableCell","CircularProgress","Button","Value2SQLValue","style","theme","rowStyle","backgroundColor","palette","background","default","progress","marginLeft","spacing","unit","marginRight","LogiDataRow","props","originalRow","Object","assign","row","state","setState","actionInProgress","changedCols","prop","startsWith","slice","push","column","value","sqlValue","get","columns","find","c","accessor","dataType","length","saveChanges","then","response","success","record","forEach","cc","editMode","catch","e","deleteRecord","deleted","columnName","editedRow","classes","index","newlyAdded","undefined","newRow","updateRecord","newRowCanceled","allowEdit","allowDelete","allowAddNew","filter","isHidden","map","keyAccessor","changeValue","readOnly","propTypes","object","array","number","bool","func","EditButton","onExecute","DeleteButton","CommitButton","CancelButton","FailedButton"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport EditableTableCell from \"./EditableTableCell\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Button from \"@material-ui/core/Button\";\nimport { Value2SQLValue } from \"./Value2SQLValue\";\n\nconst style = theme => ({\n  rowStyle: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.background.default\n    }\n  },\n  progress: {\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 2\n  }\n});\n\nclass LogiDataRow extends Component {\n  constructor(props) {\n    super(props);\n    //keep the original row for user cancels edits\n    this.originalRow = Object.assign({}, props.row);\n\n    this.state = {\n      row: props.row\n    };\n  }\n\n  updateRecord() {\n    this.setState({ actionInProgress: true });\n    //create array of changed Items\n    let changedCols = [];\n    for (let prop in this.state.row) {\n      if (prop.startsWith(\"$E-\")) {\n        //check if value is modified\n        if (this.state.row[prop] !== this.state.row[prop.slice(3)]) {\n          changedCols.push({\n            column: prop.slice(3),\n            value: this.state.row[prop],\n            sqlValue: Value2SQLValue.get(\n              this.props.columns.find(c => c.accessor === prop.slice(3))\n                .dataType\n            )(this.state.row[prop])\n          });\n        }\n      }\n    }\n    if (changedCols.length > 0) {\n      this.props\n        .saveChanges(changedCols)\n        .then(response => {\n          if (response.success) {\n            if (response.record) {\n              //the promise can return the updated record\n              this.originalRow = response.record;\n            } else {\n              //if the promise doesn't return the record but\n              // the action has been successful update edited values locally\n              changedCols.forEach(\n                cc => (this.originalRow[cc.column] = cc.value)\n              );\n            }\n          }\n          this.setState({\n            success: response.success ? response.success : false,\n            actionInProgress: false,\n            editMode: false,\n            row: this.originalRow\n          });\n        })\n        .catch(e => {\n          this.setState({\n            success: false,\n            actionInProgress: false,\n            editMode: false,\n            row: this.originalRow\n          });\n        });\n    } //no column has changed\n    else {\n      this.setState({\n        success: true,\n        actionInProgress: false,\n        editMode: false\n      });\n    }\n  }\n\n  deleteRecord() {\n    this.setState({ actionInProgress: true });\n    this.props\n      .deleteRecord()\n      .then(response => {\n        //if record successfully deleted we show Delete in action\n        //and user can't do anything with that record. Parent app can decide to refresh/re-fetch data\n        this.setState({\n          success: response.success ? response.success : false,\n          actionInProgress: false,\n          deleted: response.success\n        });\n      })\n      .catch(e => {\n        this.setState({\n          success: false,\n          actionInProgress: false,\n          deleted: false\n        });\n      });\n  }\n\n  changeValue(value, columnName) {\n    var editedRow = this.state.row;\n    editedRow[\"$E-\" + columnName] = value;\n    this.setState({ row: editedRow });\n  }\n\n  render() {\n    const { classes, columns, index } = this.props;\n    return (\n      <TableRow className={classes.rowStyle}>\n        {this.props.newlyAdded ? (\n          <TableCell>New</TableCell>\n        ) : this.state.deleted ? (\n          <TableCell>DELETED</TableCell>\n        ) : this.state.actionInProgress ? (\n          <TableCell>\n            <CircularProgress size={30} className={classes.progress} />\n          </TableCell>\n        ) : this.state.success !== undefined && !this.state.success ? (\n          <TableCell>\n            <FailedButton\n              onExecute={() => {\n                //reset the row to original row\n                this.setState({\n                  editMode: false,\n                  success: undefined,\n                  deleted: false,\n                  row: this.originalRow\n                });\n              }}\n            />\n          </TableCell>\n        ) : this.state.editMode || this.props.newRow ? (\n          <TableCell padding={\"checkbox\"}>\n            <CommitButton onExecute={() => this.updateRecord()} />\n            <CancelButton\n              onExecute={() => {\n                if (this.props.newRow) {\n                  this.props.newRowCanceled();\n                } else {\n                  //reset the row to original row\n                  this.setState({ editMode: false, row: this.originalRow });\n                }\n              }}\n            />\n          </TableCell>\n        ) : this.props.allowEdit ||\n          this.props.allowDelete ||\n          this.props.allowAddNew ? (\n          <TableCell padding={\"checkbox\"}>\n            {this.props.allowEdit ? (\n              <EditButton\n                onExecute={() => {\n                  this.setState({ editMode: true });\n                }}\n              />\n            ) : null}\n            {this.props.allowDelete ? (\n              <DeleteButton onExecute={() => this.deleteRecord()} />\n            ) : null}\n          </TableCell>\n        ) : null}\n        {columns\n          .filter(c => !c.isHidden)\n          .map(c => (\n            <TableCell\n              key={`${c.accessor}${index}`}\n              component={index === 0 ? \"th\" : null}\n              scope={index === 0 ? \"row\" : null}\n              padding=\"checkbox\"\n            >\n              <EditableTableCell\n                keyAccessor={this.props.keyAccessor}\n                dataRow={this.state.row}\n                columnName={c.accessor}\n                changeValue={value => this.changeValue(value, c.accessor)}\n                dataType={c.dataType}\n                readOnly={c.readOnly}\n                editMode={this.state.editMode || this.props.newRow}\n              />\n            </TableCell>\n          ))}\n      </TableRow>\n    );\n  }\n}\n\nLogiDataRow.propTypes = {\n  row: PropTypes.object,\n  columns: PropTypes.array,\n  index: PropTypes.number,\n  allowEdit: PropTypes.bool,\n  allowDelete: PropTypes.bool,\n  saveChanges: PropTypes.func,\n  deleteRecord: PropTypes.func\n};\n\nexport default withStyles(style)(LogiDataRow);\n\nconst EditButton = ({ onExecute }) => (\n  <IconButton onClick={onExecute} title=\"Edit row\">\n    <EditIcon />\n  </IconButton>\n);\n\nconst DeleteButton = ({ onExecute }) => (\n  <IconButton onClick={onExecute} title=\"Delete row\">\n    <DeleteIcon />\n  </IconButton>\n);\n\nconst CommitButton = ({ onExecute }) => (\n  <IconButton onClick={onExecute} title=\"Save changes\">\n    <SaveIcon />\n  </IconButton>\n);\n\nconst CancelButton = ({ onExecute }) => (\n  <IconButton color=\"secondary\" onClick={onExecute} title=\"Cancel changes\">\n    <CancelIcon />\n  </IconButton>\n);\n\nconst FailedButton = ({ onExecute }) => (\n  <Button color=\"primary\" onClick={onExecute} title=\"Action Failed\">\n    Failed!\n  </Button>\n);\n"]}]}